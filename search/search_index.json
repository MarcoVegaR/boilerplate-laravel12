{"config":{"lang":["es"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Documentaci\u00f3n del Boilerplate","text":"<p>Bienvenido/a. Este portal organiza la documentaci\u00f3n siguiendo Di\u00e1taxis (por intenci\u00f3n del lector):</p> <ul> <li>Tutoriales \u2192 Onboarding</li> <li>C\u00f3mo hacer \u2192 Permisos (permission-first)</li> <li>Referencia \u2192 Variables y permisos</li> <li>Explicaciones \u2192 Auditor\u00eda vs logging</li> <li>CI/CD \u2192 CI/CD y chequeos locales</li> </ul> <p>Consejos:</p> <ul> <li>Usa la b\u00fasqueda (arriba) para encontrar p\u00e1ginas r\u00e1pidamente.</li> <li>Idiomas: ES por defecto. EN se activar\u00e1 m\u00e1s adelante.</li> <li>Si mueves p\u00e1ginas, define redirects en <code>mkdocs.yml</code> para evitar 404.</li> </ul>"},{"location":"ci-cd/","title":"CI/CD y Chequeos Locales","text":"<p>Esta gu\u00eda resume qu\u00e9 valida la CI y c\u00f3mo replicarlo localmente antes de commitear.</p>"},{"location":"ci-cd/#workflows","title":"Workflows","text":"<ul> <li><code>/.github/workflows/lint.yml</code><ul> <li>PHP Pint (<code>vendor/bin/pint -n --test</code>)</li> <li>Prettier (<code>npm run format:check</code>)</li> <li>ESLint (<code>npm run lint:ci</code>)</li> <li>TypeScript (<code>npm run typecheck</code>)</li> <li>PHPStan (<code>composer run analyse</code>)</li> </ul> </li> <li><code>/.github/workflows/tests.yml</code><ul> <li>Instala dependencias Node y compila assets (<code>npm ci &amp;&amp; npm run build</code>).</li> <li>Instala dependencias PHP (<code>composer install</code>).</li> <li>Migra BD Postgres (puerto 5432 en CI).</li> <li>Ejecuta tests <code>./vendor/bin/pest</code>.</li> </ul> </li> </ul>"},{"location":"ci-cd/#como-testear-localmente-antes-del-commit","title":"C\u00f3mo testear localmente antes del commit","text":"<ol> <li> <p>Instalar dependencias</p> <pre><code>composer install\nnpm ci\n</code></pre> </li> <li> <p>Formateo y linters</p> <pre><code># PHP style (no modifica archivos, solo verifica)\nvendor/bin/pint -n --test\n\n# Frontend\nnpm run format:check   # Prettier\nnpm run lint:ci        # ESLint\nnpm run typecheck      # TypeScript\n</code></pre> </li> <li> <p>An\u00e1lisis est\u00e1tico PHP</p> <pre><code>composer run analyse   # PHPStan\n</code></pre> </li> <li> <p>Tests</p> <ul> <li>Aseg\u00farate de que Postgres de pruebas est\u00e9 accesible seg\u00fan <code>.env.testing</code>.<ul> <li>Host: <code>127.0.0.1</code></li> <li>Puerto: <code>5434</code> (local, ver nota abajo)</li> <li>DB: <code>boilerplate_laravel12_test</code> <pre><code>cp .env.testing .env   # Para lanzar server local si hace falta\nphp artisan key:generate\nphp artisan migrate --env=testing\nvendor/bin/pest\n</code></pre></li> </ul> </li> </ul> </li> </ol>"},{"location":"ci-cd/#documentacion-mkdocs-desarrollo-local","title":"Documentaci\u00f3n (MkDocs) \u2014 desarrollo local","text":"<ol> <li>Crear y activar venv de Python (opcional pero recomendado):</li> </ol> <pre><code>python -m venv .venv &amp;&amp; source .venv/bin/activate\n</code></pre> <ol> <li>Instalar dependencias de documentaci\u00f3n (versionadas):</li> </ol> <pre><code>pip install -r docs/requirements.txt\n</code></pre> <ol> <li>Servir o compilar documentaci\u00f3n:</li> </ol> <pre><code>mkdocs serve -a 127.0.0.1:8002   # hot reload\nmkdocs build --strict            # build estricto\n</code></pre> <p>Alternativamente (si mkdocs est\u00e1 en PATH):</p> <pre><code>npm run docs:serve\nnpm run docs:build\n</code></pre> <p>Notas:</p> <ul> <li>Puedes crear <code>mkdocs.local.yml</code> para overrides locales (p. ej., <code>site_url</code> y/o desactivar <code>redirects</code> en local). Ya est\u00e1 en <code>.gitignore</code>.</li> <li>No commitees <code>site/</code> (salida de build) ni el venv <code>.venv/</code>.</li> </ul>"},{"location":"ci-cd/#notas-de-entorno","title":"Notas de entorno","text":"<ul> <li>DB de pruebas: seguimos usando <code>.env.testing</code> como fuente \u00fanica de configuraci\u00f3n. En local el puerto es <code>5434</code>. En CI (GitHub Actions) el servicio expone <code>5432</code>.</li> <li>Locales: por defecto <code>APP_LOCALE=es</code>, <code>APP_FALLBACK_LOCALE=es</code>, <code>APP_FAKER_LOCALE=es_ES</code>.</li> <li>Pre-commit: Husky ejecuta <code>lint-staged</code> para formatear/lintar archivos tocados; Pint se ejecuta sobre archivos PHP staged.</li> </ul>"},{"location":"ci-cd/#errores-comunes","title":"Errores comunes","text":"<ul> <li>Pint: <code>unary_operator_spaces</code> \u2192 elimina el espacio despu\u00e9s de <code>!</code>, por ejemplo: <code>!array_key_exists(...)</code>.</li> <li>ESLint/TS: si fallan imports de alias, revisa <code>tsconfig.json</code> y <code>vite.config.js</code>.</li> </ul>"},{"location":"explanations/auditoria-vs-logging/","title":"Explicaci\u00f3n: Auditor\u00eda vs Logging","text":"<p>Esta p\u00e1gina explica qu\u00e9 se audita y qu\u00e9 se registra en logs en este proyecto, y por qu\u00e9.</p>"},{"location":"explanations/auditoria-vs-logging/#por-que-separar-auditoria-y-logging","title":"\u00bfPor qu\u00e9 separar auditor\u00eda y logging?","text":"<ul> <li>La auditor\u00eda responde a \"qui\u00e9n cambi\u00f3 qu\u00e9 y cu\u00e1ndo\".</li> <li>El logging responde a \"qu\u00e9 ocurri\u00f3 en la ejecuci\u00f3n\" (trazabilidad t\u00e9cnica) y facilita depuraci\u00f3n.</li> </ul>"},{"location":"explanations/auditoria-vs-logging/#auditoria-laravel-auditing","title":"Auditor\u00eda (laravel-auditing)","text":"<ul> <li><code>app/Models/User.php</code> implementa <code>OwenIt\\Auditing\\Contracts\\Auditable</code> y usa el trait <code>Auditable</code>.<ul> <li>Excluye atributos sensibles en <code>$auditExclude</code>.</li> <li>Usa propiedades temporales (<code>$auditEvent</code>, <code>$auditCustomOld</code>, <code>$auditCustomNew</code>, <code>$isCustomEvent</code>).</li> </ul> </li> <li>Eventos personalizados (en <code>app/Providers/AppServiceProvider.php</code>):<ul> <li>Escucha <code>Login</code> y <code>Logout</code>.</li> <li>Arma <code>auditCustomNew</code> con <code>ip</code>, <code>user_agent</code> (recortado) y <code>guard</code>.</li> <li>Establece <code>auditEvent</code> (login/logout) y dispara <code>OwenIt\\Auditing\\Events\\AuditCustom</code>.</li> <li>Restablece estado temporal tras emitir.</li> </ul> </li> <li>Persistencia: tabla <code>audits</code> creada por el paquete.</li> </ul>"},{"location":"explanations/auditoria-vs-logging/#logging-con-request-id","title":"Logging con Request ID","text":"<ul> <li>Middleware <code>app/Http/Middleware/RequestId.php</code>:<ul> <li>Lee header <code>X-Request-Id</code> o genera UUID.</li> <li>Lo agrega al response como <code>X-Request-Id</code> y a la request como atributo <code>request_id</code>.</li> </ul> </li> <li>Monolog Tap <code>app/Logging/RequestIdTap.php</code>:<ul> <li>Processor que inyecta <code>extra.request_id</code> en cada log.</li> </ul> </li> <li>Configuraci\u00f3n <code>config/logging.php</code>:<ul> <li>Canal <code>stack</code> con <code>tap</code> =&gt; <code>App\\Logging\\RequestIdTap::class</code>.</li> <li>En CI/local, <code>LOG_STACK=stderr</code> env\u00eda logs a <code>stderr</code>.</li> </ul> </li> </ul>"},{"location":"explanations/auditoria-vs-logging/#tests","title":"Tests","text":"<ul> <li><code>tests/Feature/Infrastructure/RequestIdMiddlewareTest.php</code> verifica header <code>X-Request-Id</code> y respeto de ID entrante.</li> <li>Auditor\u00eda: se generan auditor\u00edas de login/logout autom\u00e1ticamente; inspeccionables en <code>audits</code> en desarrollo.</li> </ul>"},{"location":"explanations/auditoria-vs-logging/#buenas-practicas","title":"Buenas pr\u00e1cticas","text":"<ul> <li>Incluir <code>request_id</code> en logs externos (Sentry, Papertrail, etc.).</li> <li>Evitar auditar campos sensibles; usar <code>auditExclude</code> y normalizar <code>auditCustomNew</code>.</li> <li>A\u00f1adir asserts en tests para auditor\u00edas clave cuando aplique.</li> </ul>"},{"location":"how-to/autoeliminacion-cuenta-deshabilitada/","title":"C\u00f3mo: Autoeliminaci\u00f3n de cuenta deshabilitada","text":"<p>Objetivo: documentar la pol\u00edtica de impedir que los usuarios eliminen su propia cuenta y c\u00f3mo revertirla si fuese necesario.</p>"},{"location":"how-to/autoeliminacion-cuenta-deshabilitada/#estado-actual-en-este-proyecto","title":"Estado actual (en este proyecto)","text":"<ul> <li> <p>La ruta <code>DELETE settings/profile</code> est\u00e1 deshabilitada en <code>routes/settings.php</code>:</p> <pre><code>// Route disabled: users cannot delete their own account\n// Route::delete('settings/profile', [ProfileController::class, 'destroy'])\n//     -&gt;middleware('can:settings.profile.delete')\n//     -&gt;name('profile.destroy');\n</code></pre> </li> <li> <p>La acci\u00f3n <code>destroy()</code> del controlador est\u00e1 deshabilitada en <code>app/Http/Controllers/Settings/ProfileController.php</code>:</p> <pre><code>// Account deletion disabled\n// public function destroy(ProfileDeleteRequest $request): RedirectResponse\n// {\n//     abort(404);\n// }\n</code></pre> </li> <li> <p>El permiso <code>settings.profile.delete</code> est\u00e1 comentado en <code>config/permissions/settings.php</code>:</p> <pre><code>// 'settings.profile.delete', // disabled: users cannot delete their own account\n// 'settings.profile.delete' =&gt; 'Eliminar cuenta', // disabled\n</code></pre> </li> <li> <p>En la UI (Inertia/React), el componente de eliminaci\u00f3n est\u00e1 comentado en <code>resources/js/pages/settings/profile.tsx</code>:</p> <pre><code>// import DeleteUser from '@/components/delete-user'; // disabled: account deletion is not allowed\n// ...\n// &lt;DeleteUser /&gt;\n</code></pre> </li> </ul>"},{"location":"how-to/autoeliminacion-cuenta-deshabilitada/#re-habilitar-la-autoeliminacion-no-recomendada","title":"Re-habilitar la autoeliminaci\u00f3n (no recomendada)","text":"<ol> <li> <p>Permisos</p> <ul> <li>Destapar <code>settings.profile.delete</code> en <code>config/permissions/settings.php</code> (en <code>permissions</code> y en <code>descriptions</code>).</li> <li>Sincronizar:     <pre><code>php artisan config:clear\nphp artisan db:seed --class=Database\\\\Seeders\\\\PermissionsSeeder\n</code></pre></li> </ul> </li> <li> <p>Backend</p> <ul> <li>Destapar la ruta <code>Route::delete('settings/profile', ...)</code> en <code>routes/settings.php</code>.</li> <li>Destapar e implementar <code>destroy(ProfileDeleteRequest $request)</code> en <code>ProfileController</code>.<ul> <li>El request existe: <code>app/Http/Requests/Settings/ProfileDeleteRequest.php</code>.</li> <li>Implementaci\u00f3n sugerida: validar contrase\u00f1a, cerrar sesi\u00f3n y eliminar usuario.</li> </ul> </li> </ul> </li> <li> <p>Frontend</p> <ul> <li>Volver a importar y renderizar <code>&lt;DeleteUser /&gt;</code> en <code>resources/js/pages/settings/profile.tsx</code>.</li> </ul> </li> <li> <p>Seguridad</p> <ul> <li>Considera periodo de gracia (soft-delete + reactivaci\u00f3n), exportaci\u00f3n de datos, verificaci\u00f3n por correo y auditor\u00eda.</li> </ul> </li> </ol>"},{"location":"how-to/autoeliminacion-cuenta-deshabilitada/#estado-recomendado","title":"Estado recomendado","text":"<ul> <li>Mantener deshabilitada la autoeliminaci\u00f3n en este boilerplate.</li> <li>Proveer un proceso administrado (mesa de ayuda o admins) para bajas de cuentas.</li> </ul>"},{"location":"how-to/permisos-permission-first/","title":"C\u00f3mo: Permission-first (definir y aplicar permisos)","text":"<p>Objetivo: agregar un permiso nuevo, sembrarlo, proteger rutas y exponerlo al frontend (Inertia) v\u00eda <code>auth.can</code>.</p>"},{"location":"how-to/permisos-permission-first/#1-declarar-permisos-por-modulo","title":"1) Declarar permisos por m\u00f3dulo","text":"<ul> <li>Archivo por m\u00f3dulo en <code>config/permissions/&lt;modulo&gt;.php</code>.</li> </ul> <pre><code>&lt;?php\nreturn [\n    'permissions' =&gt; [\n        '&lt;modulo&gt;.index', '&lt;modulo&gt;.view', '&lt;modulo&gt;.create', '&lt;modulo&gt;.update', '&lt;modulo&gt;.delete',\n    ],\n    'descriptions' =&gt; [\n        '&lt;modulo&gt;.index' =&gt; 'Listar &lt;modulo&gt;',\n        '&lt;modulo&gt;.view' =&gt; 'Ver &lt;modulo&gt;',\n        // ...\n    ],\n];\n</code></pre>"},{"location":"how-to/permisos-permission-first/#2-agregador-de-permisos-ya-incluido","title":"2) Agregador de permisos (ya incluido)","text":"<ul> <li><code>config/permissions.php</code> fusiona todos los m\u00f3dulos:</li> </ul> <pre><code>&lt;?php\n$permissions = $descriptions = [];\nforeach (glob(__DIR__.'/permissions/*.php') as $file) {\n    $data = require $file;\n    $permissions = array_merge($permissions, $data['permissions'] ?? []);\n    $descriptions = array_merge($descriptions, $data['descriptions'] ?? []);\n}\nreturn [\n    'guard' =&gt; 'web',\n    'permissions' =&gt; array_values(array_unique($permissions)),\n    'descriptions' =&gt; $descriptions,\n];\n</code></pre>"},{"location":"how-to/permisos-permission-first/#3-sembrar-y-sincronizar","title":"3) Sembrar y sincronizar","text":"<pre><code>php artisan config:clear\nphp artisan db:seed --class=Database\\\\Seeders\\\\PermissionsSeeder\n</code></pre>"},{"location":"how-to/permisos-permission-first/#4-proteger-rutas","title":"4) Proteger rutas","text":"<ul> <li>Usa middleware <code>can:&lt;permiso&gt;</code>.</li> </ul> <pre><code>Route::get('settings/profile', [ProfileController::class, 'edit'])\n    -&gt;middleware('can:settings.profile.view')\n    -&gt;name('profile.edit');\n</code></pre>"},{"location":"how-to/permisos-permission-first/#5-frontend-inertia","title":"5) Frontend (Inertia)","text":"<ul> <li><code>app/Http/Middleware/HandleInertiaRequests.php</code> comparte <code>auth.can</code> (mapa permiso =&gt; booleano).</li> <li>En React:</li> </ul> <pre><code>if (!page.props.auth.can['users.create']) return null;\n</code></pre>"},{"location":"how-to/permisos-permission-first/#6-tests-recomendados","title":"6) Tests recomendados","text":"<ul> <li><code>tests/Feature/Permissions/PermissionsBehaviorTest.php</code></li> <li><code>tests/Feature/Infrastructure/InertiaSharedPropsTest.php</code></li> </ul> <p>Con estos tests, si agregas un permiso en <code>config/permissions/</code>, se valida que:</p> <ul> <li>El frontend reciba la llave en <code>auth.can</code>.</li> <li>Las rutas protegidas respondan seg\u00fan corresponda.</li> </ul>"},{"location":"how-to/registro-usuarios-deshabilitado/","title":"C\u00f3mo: Registro de usuarios deshabilitado (admin-only)","text":"<p>Objetivo: documentar la pol\u00edtica de deshabilitar el registro p\u00fablico de usuarios y c\u00f3mo re-habilitarlo si fuese necesario.</p>"},{"location":"how-to/registro-usuarios-deshabilitado/#estado-actual-en-este-proyecto","title":"Estado actual (en este proyecto)","text":"<ul> <li> <p>Rutas de registro deshabilitadas en <code>routes/auth.php</code>:</p> <pre><code>// Registration routes disabled (admin-only user provisioning)\n// Route::get('register', [RegisteredUserController::class, 'create'])-&gt;name('register');\n// Route::post('register', [RegisteredUserController::class, 'store']);\n</code></pre> </li> <li> <p>El controlador existe para referencia: <code>app/Http/Controllers/Auth/RegisteredUserController.php</code> (nota en docblock indicando que no se debe exponer <code>/register</code>).</p> </li> <li>El README refleja esta pol\u00edtica: registro deshabilitado; provisi\u00f3n de usuarios solo por administradores.</li> </ul>"},{"location":"how-to/registro-usuarios-deshabilitado/#re-habilitar-el-registro-no-recomendado-en-este-boilerplate","title":"Re-habilitar el registro (no recomendado en este boilerplate)","text":"<ol> <li> <p>Descomentar las rutas en <code>routes/auth.php</code>:</p> <pre><code>use App\\Http\\Controllers\\Auth\\RegisteredUserController;\n\nRoute::middleware('guest')-&gt;group(function () {\n    Route::get('register', [RegisteredUserController::class, 'create'])-&gt;name('register');\n    Route::post('register', [RegisteredUserController::class, 'store']);\n});\n</code></pre> </li> <li> <p>Verificar que la p\u00e1gina de registro exista y funcione (<code>resources/js/pages/auth/register.tsx</code> si aplica con Inertia/React).</p> </li> <li> <p>Probar el flujo:</p> <ul> <li>GET <code>/register</code> debe renderizar el formulario.</li> <li>POST <code>/register</code> debe crear el usuario y redirigir a <code>dashboard</code>.</li> </ul> </li> <li> <p>Seguridad y pol\u00edticas:</p> <ul> <li>Si re-habilitas registro, considera rate limiting, verificaci\u00f3n de email, captcha y procesos de onboarding.</li> </ul> </li> </ol>"},{"location":"how-to/registro-usuarios-deshabilitado/#provision-de-usuarios-recomendada","title":"Provisi\u00f3n de usuarios (recomendada)","text":"<ul> <li>Usuario admin por defecto: <code>database/seeders/UsersSeeder.php</code> crea/garantiza un usuario con rol <code>admin</code>.</li> <li>Se espera que administradores creen usuarios. Este boilerplate no incluye (a\u00fan) un UI de administraci\u00f3n; puedes hacerlo v\u00eda seeder/console o agregando m\u00f3dulos de gesti\u00f3n de usuarios protegidos por permisos (<code>users.create</code>, <code>users.update</code>, \u2026) definidos en <code>config/permissions/users.php</code>.</li> </ul>"},{"location":"how-to/registro-usuarios-deshabilitado/#checklist-rapido","title":"Checklist r\u00e1pido","text":"<ul> <li>[x] Rutas de registro est\u00e1n comentadas en <code>routes/auth.php</code>.</li> <li>[x] Controlador <code>RegisteredUserController</code> presente pero no expuesto.</li> <li>[x] README comunica pol\u00edtica admin-only.</li> <li>[ ] Si decides re-habilitar: a\u00f1ade tests de integraci\u00f3n y endurece controles anti-abuso.</li> </ul>"},{"location":"reference/localizacion-por-defecto/","title":"Referencia: Localizaci\u00f3n por defecto (ES)","text":"<p>Esta base asume espa\u00f1ol como idioma por defecto tanto en backend como en frontend.</p>"},{"location":"reference/localizacion-por-defecto/#configuracion","title":"Configuraci\u00f3n","text":"<ul> <li> <p><code>.env</code> y <code>.env.example</code>:</p> <pre><code>APP_LOCALE=es\nAPP_FALLBACK_LOCALE=es\nAPP_FAKER_LOCALE=es_ES\n</code></pre> </li> <li> <p><code>config/app.php</code> (lee de <code>.env</code>):</p> <pre><code>'locale' =&gt; env('APP_LOCALE', 'en'),\n'fallback_locale' =&gt; env('APP_FALLBACK_LOCALE', 'en'),\n'faker_locale' =&gt; env('APP_FAKER_LOCALE', 'en_US'),\n</code></pre> </li> </ul>"},{"location":"reference/localizacion-por-defecto/#recursos-de-traduccion","title":"Recursos de traducci\u00f3n","text":"<ul> <li>Archivos de Laravel en <code>lang/es/</code>:<ul> <li><code>auth.php</code>, <code>passwords.php</code>, <code>validation.php</code>.</li> </ul> </li> <li>Cadenas libres del frontend/backend: <code>lang/es.json</code>.</li> </ul>"},{"location":"reference/localizacion-por-defecto/#uso-en-backend","title":"Uso en backend","text":"<ul> <li> <p>Helpers de localizaci\u00f3n:</p> <pre><code>__('validation.required'); // desde lang/es/validation.php\n__('reset.link_sent');     // si existe en lang/es.json\n</code></pre> </li> <li> <p>Forzar/leer idioma actual:</p> <pre><code>app()-&gt;setLocale('es');\n$locale = app()-&gt;getLocale();\n</code></pre> </li> </ul>"},{"location":"reference/localizacion-por-defecto/#notas","title":"Notas","text":"<ul> <li>La documentaci\u00f3n de este proyecto se sirve en ES por defecto (MkDocs Material <code>theme.language: es</code>).</li> <li>Si agregas EN u otros idiomas en el futuro, ajusta <code>mkdocs.yml</code> (plugin <code>i18n</code>) y a\u00f1ade archivos en <code>lang/&lt;locale&gt;/</code> y <code>&lt;locale&gt;.json</code>.</li> </ul>"},{"location":"reference/variables-y-permisos/","title":"Referencia: Variables y permisos","text":""},{"location":"reference/variables-y-permisos/#variables-de-entorno-principales","title":"Variables de entorno (principales)","text":"<ul> <li>Localizaci\u00f3n por defecto:<ul> <li><code>APP_LOCALE=es</code>, <code>APP_FALLBACK_LOCALE=es</code>, <code>APP_FAKER_LOCALE=es_ES</code></li> </ul> </li> <li>Base de datos (desarrollo por defecto):<ul> <li><code>DB_HOST=127.0.0.1</code>, <code>DB_PORT=5432</code></li> </ul> </li> <li>Testing (solo <code>.env.testing</code>):<ul> <li><code>DB_HOST=127.0.0.1</code>, <code>DB_PORT=5434</code>, <code>DB_DATABASE=boilerplate_laravel12_test</code>, <code>DB_USERNAME=postgres</code>, <code>DB_PASSWORD=postgres</code></li> </ul> </li> <li>Logging:<ul> <li><code>LOG_CHANNEL=stack</code>, <code>LOG_STACK=stderr</code></li> </ul> </li> </ul>"},{"location":"reference/variables-y-permisos/#permisos","title":"Permisos","text":"<ul> <li>Declaraci\u00f3n por m\u00f3dulo: <code>config/permissions/*.php</code>.</li> <li>Agregador: <code>config/permissions.php</code> expone:<ul> <li><code>guard</code>, <code>permissions</code> (lista \u00fanica), <code>descriptions</code> (mapa nombre =&gt; descripci\u00f3n).</li> </ul> </li> </ul>"},{"location":"reference/variables-y-permisos/#obtener-permisos-en-runtime","title":"Obtener permisos en runtime","text":"<pre><code>$permissions = config('permissions.permissions');\n$descriptions = config('permissions.descriptions');\n</code></pre>"},{"location":"reference/variables-y-permisos/#frontend-inertia","title":"Frontend (Inertia)","text":"<ul> <li><code>auth.can</code> contiene todas las llaves de <code>config('permissions.permissions')</code> con booleanos por usuario.</li> </ul>"},{"location":"reference/variables-y-permisos/#notas","title":"Notas","text":"<ul> <li>Los tests usan <code>.env.testing</code> como fuente \u00fanica (sin overrides en <code>phpunit.xml</code>).</li> <li>Si cambias permisos, limpia configuraci\u00f3n y re-seed (<code>Database\\\\Seeders\\\\PermissionsSeeder</code>).</li> </ul>"},{"location":"tutorials/onboarding/","title":"Onboarding (Tutorial)","text":"<p>Objetivo: dejar el entorno listo (backend + frontend + pruebas) replicando lo que valida la CI.</p>"},{"location":"tutorials/onboarding/#prerrequisitos","title":"Prerrequisitos","text":"<ul> <li>PHP 8.2+, Composer 2.x</li> <li>Node.js 20+ y npm</li> <li>PostgreSQL (local por defecto 5432; pruebas usan <code>.env.testing</code> con 5434)</li> </ul>"},{"location":"tutorials/onboarding/#backend","title":"Backend","text":"<pre><code># Variables de entorno\ncp .env.example .env\nphp artisan key:generate\n\n# Dependencias PHP\ncomposer install\n\n# Migraciones y seeders (BD local por defecto en 5432)\nphp artisan migrate --seed\n</code></pre>"},{"location":"tutorials/onboarding/#frontend","title":"Frontend","text":"<pre><code>npm ci\nnpm run build\n</code></pre>"},{"location":"tutorials/onboarding/#pruebas-testing","title":"Pruebas (testing)","text":"<ul> <li>Fuente \u00fanica: <code>.env.testing</code> (Postgres <code>127.0.0.1:5434</code>, DB <code>boilerplate_laravel12_test</code>).</li> </ul> <pre><code>php artisan migrate --env=testing\nvendor/bin/pest\n</code></pre>"},{"location":"tutorials/onboarding/#verificacion-local-antes-de-commitear","title":"Verificaci\u00f3n local (antes de commitear)","text":"<pre><code>npm run lint:ci &amp;&amp; npm run typecheck &amp;&amp; npm run format:check \\\n  &amp;&amp; composer run analyse &amp;&amp; vendor/bin/pint -n --test \\\n  &amp;&amp; npm run build &amp;&amp; php artisan test -q\n</code></pre>"},{"location":"tutorials/onboarding/#cicd","title":"CI/CD","text":"<ul> <li>Ver gu\u00eda: CI/CD y Chequeos Locales</li> </ul>"},{"location":"tutorials/onboarding/#troubleshooting","title":"Troubleshooting","text":"<ul> <li>Si no ves el bot\u00f3n \"copy\" en snippets, prueba desactivar temporalmente <code>navigation.instant</code> en <code>mkdocs.yml</code>.</li> <li>Al mover p\u00e1ginas, agrega redirects en <code>mkdocs.yml</code> (plugin <code>redirects</code>).</li> </ul>"}]}